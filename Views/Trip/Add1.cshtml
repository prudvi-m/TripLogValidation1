@model TripViewModel

@{
    ViewBag.Title = "Add Trip - Page 1";
    ViewBag.SubHeader = "Add Trip Destination and Dates";
}

<div asp-validation-summary="All" class="text-danger"></div>

<form asp-action="Add">
    <input type="hidden" asp-for="PageNumber" />

    <div class="form-group">
        <label asp-for="Trip.Destination">Destination</label>
        <input asp-for="Trip.Destination" onchange="handleRegex(this,/^[a-zA-Z]+$/)" class="form-control" />
    </div>

    <div class="form-group">
        <label asp-for="Trip.Accommodation">Accommodations</label>
        <input asp-for="Trip.Accommodation" onchange="handleRegex(this,/^[a-zA-Z0-9]+$/)" class="form-control" />
    </div>

    
    <div class="form-group">
        <label asp-for="Trip.StartDate">Start Date</label>
        <input asp-for="Trip.StartDate" id="dtStart" onchange="handleDateValidation(this)" class="form-control" />
    </div>

    <div class="form-group">
        <label asp-for="Trip.EndDate">End Date</label>
        <input asp-for="Trip.EndDate" onchange="handleDateValidation(this,false)" class="form-control" />
    </div>

    <div>
        <button type="submit" class="btn btn-dark">Next</button>
        <a asp-action="Cancel" class="btn btn-outline-dark">Cancel</a>
    </div>


    <script type="text/javascript">

        
        function handleElClass(el,valid) {
            var invalidCssClass = 'input-validation-error';
            if(!valid) $(el).addClass(invalidCssClass);
            else $(el).removeClass(invalidCssClass);
        }

        function validateRegex(regexStr, inputStr) {
            let regex = new RegExp(regexStr);
            return regex.test(inputStr);
        }
        
        function handleRegex(inputEl,regex) {
            var valid = true;
            if(inputEl && inputEl.attributes['data-val-regex-pattern'].value) {
                valid = validateRegex(regex,inputEl.value)
                handleElClass(inputEl,valid)
            }
        }

        function handleDateValidation(dateEl, start = true) {
            var valid =  true;
            var currentValue = new Date(dateEl.value);
            
            if(start) {
                var today = new Date();
                valid = currentValue >= today;
            }
            else {
                var startDate = new Date($("#dtStart").val());
                console.log(startDate);
                valid = currentValue >= startDate;
            }
            handleElClass(dateEl,valid)
        }

    </script>   
    
</form>

